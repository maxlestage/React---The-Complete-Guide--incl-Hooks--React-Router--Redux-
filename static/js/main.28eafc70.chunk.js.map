{"version":3,"sources":["components/UI/Card.jsx","components/Expenses/ExpensesFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItems.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expense.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChangeFilter","selected","value","onChange","event","target","ExpenseDate","date","year","getFullYear","month","toLocaleString","day","ExpendItems","title","amount","ExpensesList","items","length","map","item","id","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","ExpensesChart","expenses","chartDataPoints","expense","getMonth","Expense","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","console","log","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","entryTitle","setEntryTitle","entryAmount","setEntryAmount","entryDate","setEntryDate","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","INITIAL_EXPENSES","App","setExpenses","previousExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28eafc70.chunk.js","sourcesContent":["import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\nexport default Card;\n","import \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = ({ onChangeFilter, selected }) => {\n  const dropdownChangeHandler = (event) => {\n    onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate({ date }) {\n  const year = date.getFullYear();\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport \"./ExpenseItems.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nfunction ExpendItems(props) {\n  // const [title, setTitle] = useState(props.title);\n  // console.log(\"ExpenseItem evaluated by React\");\n  // // let title = props.title;\n\n  // const handlerClicker = () => {\n  //   // title = \"Update!\";\n  //   setTitle(\"Test title\");\n  //   console.log(title);\n  // };\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        {/* <button onClick={handlerClicker}>Update Title</button> */}\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpendItems;\n","import \"./ExpensesList.css\";\nimport ExpendItems from \"./ExpenseItems\";\n\nconst ExpensesList = ({ items }) => {\n  //   let expensesContent = <p>No expense found.</p>;\n  if (items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no Expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {items.map((item) => (\n        <ExpendItems\n          key={item.id}\n          title={item.title}\n          amount={item.amount}\n          date={item.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nfunction ChartBar({ value, maxValue, label }) {\n  let barFillHeight = \"0%\";\n\n  if (maxValue > 0) {\n    barFillHeight = Math.round((value / maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{label}</div>\n    </div>\n  );\n}\n\nexport default ChartBar;\n","import ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nfunction Chart({ dataPoints }) {\n  const dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues); // Le spread Opérateur permet d'extraire tous les éléments.\n\n  return (\n    <div className=\"chart\">\n      {dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nfunction ExpensesChart({ expenses }) {\n  const chartDataPoints = [\n    { label: \"Janvier\", value: 0 },\n    { label: \"Fevrier\", value: 0 },\n    { label: \"Mars\", value: 0 },\n    { label: \"Avril\", value: 0 },\n    { label: \"Mai\", value: 0 },\n    { label: \"Juin\", value: 0 },\n    { label: \"Juillet\", value: 0 },\n    { label: \"Aout\", value: 0 },\n    { label: \"Septembre\", value: 0 },\n    { label: \"Octobre\", value: 0 },\n    { label: \"Novembre\", value: 0 },\n    { label: \"Décembre\", value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = expense.date.getMonth(); // Start at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n}\n\nexport default ExpensesChart;\n","import { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport \"./Expense.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expense({ items }) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = items.filter((item) => {\n    return item.date.getFullYear().toString() === filteredYear;\n  });\n\n  console.log(filteredExpenses);\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n        {/* {expensesContent} */}\n      </Card>\n    </div>\n  );\n}\nexport default Expense;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm({ onSaveExpenseData, onCancel }) {\n  const [entryTitle, setEntryTitle] = useState(\"\");\n  const [entryAmount, setEntryAmount] = useState(\"\");\n  const [entryDate, setEntryDate] = useState(\"\");\n\n  /*  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmout: \"\",\n    enteredDate: \"\",\n  }); */\n\n  const handlerTitle = (event) => {\n    setEntryTitle(event.target.value);\n    /*    setUserInput((prevState) => {\n      return { ...prevState, enteredTitle: event.target.value };\n    }); */\n  };\n\n  const handlerAmout = (event) => {\n    setEntryAmount(event.target.value);\n    /*  setUserInput((prevState) => {\n      return { ...prevState, enteredAmout: event.target.value };\n    }); */\n  };\n\n  const handlerDate = (event) => {\n    setEntryDate(event.target.value);\n    /* setUserInput((prevState) => {\n      return { ...prevState, enteredDate: event.target.value };\n    }); */\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: entryTitle,\n      amount: entryAmount,\n      date: new Date(entryDate),\n    };\n    // console.log(expenseData);\n    onSaveExpenseData(expenseData);\n\n    setEntryTitle(\"\");\n    setEntryAmount(\"\");\n    setEntryDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={entryTitle} onChange={handlerTitle} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={entryAmount}\n            onChange={handlerAmout}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={entryDate}\n            onChange={handlerDate}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n","import \"./NewExpense.css\";\nimport { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\nfunction NewExpense({ onAddExpense }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const onSaveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = { ...enteredExpenseData, id: Math.random().toString() };\n    console.log(expenseData);\n    onAddExpense(expenseData);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={onSaveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import { useState } from \"react\";\nimport Expense from \"./components/Expenses/Expense\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst INITIAL_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    // console.log(\"In App.js !\");\n    // console.log(\"J'affiche :\", expense);\n    setExpenses((previousExpense) => {\n      return [expense, ...previousExpense];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expense items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}